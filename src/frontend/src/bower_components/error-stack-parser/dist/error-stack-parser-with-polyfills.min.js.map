{"version":3,"sources":["polyfills.js","stackframe.js","error-stack-parser.js"],"names":["Array","prototype","map","callback","thisArg","T","O","Object","this","len","length","arguments","A","k","kValue","mappedValue","call","filter","t","res","i","val","push","root","factory","define","amd","exports","module","StackFrame","_isNumber","n","isNaN","parseFloat","isFinite","functionName","args","fileName","lineNumber","columnNumber","source","undefined","setFunctionName","setArgs","setFileName","setLineNumber","setColumnNumber","setSource","getFunctionName","v","String","getArgs","toString","TypeError","getFileName","getLineNumber","Number","getColumnNumber","getSource","join","require","ErrorStackParser","FIREFOX_SAFARI_STACK_REGEXP","CHROME_IE_STACK_REGEXP","parse","error","stacktrace","parseOpera","stack","match","parseV8OrIE","parseFFOrSafari","Error","extractLocation","urlLike","indexOf","locationParts","replace","split","lastNumber","pop","possibleNumber","line","tokens","slice","shift","e","message","parseOpera9","parseOpera11","parseOpera10","lineRE","lines","result","exec","argsRaw","functionCall"],"mappings":"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","file":"error-stack-parser-with-polyfills.min.js","sourcesContent":["// ES5 Polyfills\n// See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\nif (!Array.prototype.map) {\n    Array.prototype.map = function(callback, thisArg) {\n        var O = Object(this);\n        var len = O.length >>> 0;\n        var T;\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n\n        var A = new Array(len);\n        var k = 0;\n\n        while (k < len) {\n            var kValue, mappedValue;\n            if (k in O) {\n                kValue = O[k];\n                mappedValue = callback.call(T, kValue, k, O);\n                A[k] = mappedValue;\n            }\n            k++;\n        }\n\n        return A;\n    };\n}\n\n// See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\nif (!Array.prototype.filter) {\n    Array.prototype.filter = function(callback/*, thisArg*/) {\n        var t = Object(this);\n        var len = t.length >>> 0;\n\n        var res = [];\n        var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n        for (var i = 0; i < len; i++) {\n            if (i in t) {\n                var val = t[i];\n                if (callback.call(thisArg, val, i, t)) {\n                    res.push(val);\n                }\n            }\n        }\n\n        return res;\n    };\n}\n","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function () {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function StackFrame(functionName, args, fileName, lineNumber, columnNumber, source) {\n        if (functionName !== undefined) {\n            this.setFunctionName(functionName);\n        }\n        if (args !== undefined) {\n            this.setArgs(args);\n        }\n        if (fileName !== undefined) {\n            this.setFileName(fileName);\n        }\n        if (lineNumber !== undefined) {\n            this.setLineNumber(lineNumber);\n        }\n        if (columnNumber !== undefined) {\n            this.setColumnNumber(columnNumber);\n        }\n        if (source !== undefined) {\n            this.setSource(source);\n        }\n    }\n\n    StackFrame.prototype = {\n        getFunctionName: function () {\n            return this.functionName;\n        },\n        setFunctionName: function (v) {\n            this.functionName = String(v);\n        },\n\n        getArgs: function () {\n            return this.args;\n        },\n        setArgs: function (v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        // NOTE: Property name may be misleading as it includes the path,\n        // but it somewhat mirrors V8's JavaScriptStackTraceApi\n        // https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi and Gecko's\n        // http://mxr.mozilla.org/mozilla-central/source/xpcom/base/nsIException.idl#14\n        getFileName: function () {\n            return this.fileName;\n        },\n        setFileName: function (v) {\n            this.fileName = String(v);\n        },\n\n        getLineNumber: function () {\n            return this.lineNumber;\n        },\n        setLineNumber: function (v) {\n            if (!_isNumber(v)) {\n                throw new TypeError('Line Number must be a Number');\n            }\n            this.lineNumber = Number(v);\n        },\n\n        getColumnNumber: function () {\n            return this.columnNumber;\n        },\n        setColumnNumber: function (v) {\n            if (!_isNumber(v)) {\n                throw new TypeError('Column Number must be a Number');\n            }\n            this.columnNumber = Number(v);\n        },\n\n        getSource: function () {\n            return this.source;\n        },\n        setSource: function (v) {\n            this.source = String(v);\n        },\n\n        toString: function() {\n            var functionName = this.getFunctionName() || '{anonymous}';\n            var args = '(' + (this.getArgs() || []).join(',') + ')';\n            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';\n            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';\n            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';\n            return functionName + args + fileName + lineNumber + columnNumber;\n        }\n    };\n\n    return StackFrame;\n}));\n","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+\\:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /\\s+at .*(\\S+\\:\\d+|\\(native\\))/;\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         * @param error {Error}\n         * @return Array[StackFrame]\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack && error.stack.match(FIREFOX_SAFARI_STACK_REGEXP)) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        /**\n         * Separate line and column numbers from a URL-like string.\n         * @param urlLike String\n         * @return Array[String]\n         */\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var locationParts = urlLike.replace(/[\\(\\)\\s]/g, '').split(':');\n            var lastNumber = locationParts.pop();\n            var possibleNumber = locationParts[locationParts.length - 1];\n            if (!isNaN(parseFloat(possibleNumber)) && isFinite(possibleNumber)) {\n                var lineNumber = locationParts.pop();\n                return [locationParts.join(':'), lineNumber, lastNumber];\n            } else {\n                return [locationParts.join(':'), lastNumber, undefined];\n            }\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            return error.stack.split('\\n').filter(function (line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this).map(function (line) {\n                var tokens = line.replace(/^\\s+/, '').split(/\\s+/).slice(1);\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionName = (!tokens[0] || tokens[0] === 'Anonymous') ? undefined : tokens[0];\n                return new StackFrame(functionName, undefined, locationParts[0], locationParts[1], locationParts[2], line);\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            return error.stack.split('\\n').filter(function (line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP);\n            }, this).map(function (line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionName = tokens.shift() || undefined;\n                return new StackFrame(functionName, undefined, locationParts[0], locationParts[1], locationParts[2], line);\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame(undefined, undefined, match[2], match[1], undefined, lines[i]));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame(match[3] || undefined, undefined, match[2], match[1], undefined, lines[i]));\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            return error.stack.split('\\n').filter(function (line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) &&\n                    !line.match(/^Error created at/);\n            }, this).map(function (line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                        .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                        .replace(/\\([^\\)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^\\)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^\\(]+\\(([^\\)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ? undefined : argsRaw.split(',');\n                return new StackFrame(functionName, args, locationParts[0], locationParts[1], locationParts[2], line);\n            }, this);\n        }\n    };\n}));\n\n"],"sourceRoot":"/source/"}